# Development Docker Compose override
# Use with: docker-compose -f docker-compose.yml -f docker-compose.override.yml up
version: '3.8'

services:
  # Override main application service for development
  google-ads-automation:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: base
    container_name: google-ads-automation-dev
    environment:
      - NODE_ENV=development
      - DOCKER_ENV=true
      - NEXT_PUBLIC_DEBUG_MODE=true
      - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=false
      - PUPPETEER_EXECUTABLE_PATH=
    volumes:
      # Mount source code for hot reload
      - .:/app
      - /app/node_modules
      - /app/.next
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    ports:
      - "3000:3000"
    # Override command to enable development mode
    command: npm run dev
    networks:
      - google-ads-network
    # Remove security constraints for development
    security_opt: []
    shm_size: 1gb

  # Redis for development
  redis:
    image: redis:7-alpine
    container_name: google-ads-redis-dev
    command: redis-server --appendonly yes --notify-keyspace-events Ex
    volumes:
      - redis_dev_data:/data
    ports:
      - "6379:6379"
    networks:
      - google-ads-network

  # PostgreSQL for development
  postgres:
    image: postgres:15-alpine
    container_name: google-ads-postgres-dev
    environment:
      - POSTGRES_DB=google_ads_automation_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=devpassword
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - google-ads-network

  # Development tools - pgAdmin
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: google-ads-pgadmin-dev
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - google-ads-network
    profiles:
      - tools

  # Development tools - Redis Commander
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: google-ads-redis-commander-dev
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - google-ads-network
    profiles:
      - tools

  # Mailhog for email testing in development
  mailhog:
    image: mailhog/mailhog:latest
    container_name: google-ads-mailhog-dev
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - google-ads-network

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  google-ads-network:
    driver: bridge