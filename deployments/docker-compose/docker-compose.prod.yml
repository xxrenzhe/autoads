# Production Docker Compose configuration
# Use with: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
version: '3.8'

services:
  google-ads-automation:
    image: ghcr.io/xxrenzhe/autoads:prod-latest
    container_name: google-ads-automation-prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DOCKER_ENV=true
      - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=false
      - PUPPETEER_EXECUTABLE_PATH=
      - PLAYWRIGHT_SKIP_VALIDATE_HOST_REQUIREMENTS=true
      - PLAYWRIGHT_BROWSERS_PATH=/app/ms-playwright
    ports:
      - "3000:3000"
    volumes:
      # Mount logs for persistent storage
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      # Mount shared memory for browser performance
      - /dev/shm:/dev/shm
    networks:
      - google-ads-network
    # Increase shared memory size for browser
    shm_size: 2gb
    # Resource limits for production
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  # Redis for production
  redis:
    image: redis:7-alpine
    container_name: google-ads-redis-prod
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_prod_data:/data
    networks:
      - google-ads-network
    # Resource limits for Redis
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'

  # PostgreSQL for production
  postgres:
    image: postgres:15-alpine
    container_name: google-ads-postgres-prod
    restart: unless-stopped
    environment:
      - POSTGRES_DB=google_ads_automation_prod
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - google-ads-network
    # Resource limits for PostgreSQL
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: google-ads-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - google-ads-automation
    networks:
      - google-ads-network
    # Resource limits for Nginx
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.2'

volumes:
  postgres_prod_data:
    driver: local
  redis_prod_data:
    driver: local

networks:
  google-ads-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
