# Production-Ready Dockerfile for AutoAds SaaS
# Multi-stage build with security hardening and optimization

# Build arguments
ARG GO_VERSION=1.23
ARG ALPINE_VERSION=3.19

# 阶段1: 构建Go应用
FROM golang:${GO_VERSION}-alpine${ALPINE_VERSION} AS go-builder

# 安装构建依赖
RUN apk add --no-cache \
    git \
    ca-certificates \
    tzdata \
    upx

# 设置工作目录
WORKDIR /app

# 复制依赖文件（优化Docker缓存）
COPY go.mod go.sum ./

# 下载并验证依赖
RUN go mod download && go mod verify

# 复制源代码
COPY . .

# 构建优化的静态二进制文件
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -ldflags='-w -s -extldflags "-static"' \
    -a -installsuffix cgo \
    -trimpath \
    -o autoads-server ./cmd/server/main.go

# 压缩二进制文件
RUN upx --best --lzma autoads-server

# 验证二进制文件
RUN ./autoads-server --version || echo "Binary built successfully"

# 阶段2: 运行时镜像
FROM alpine:${ALPINE_VERSION}

# 安装运行时依赖
RUN apk --no-cache add \
    ca-certificates \
    tzdata \
    curl \
    dumb-init && \
    update-ca-certificates

# 创建应用用户和组
RUN addgroup -g 1001 -S autoads && \
    adduser -S autoads -u 1001 -G autoads -h /app -s /sbin/nologin

# 设置工作目录
WORKDIR /app

# 从构建阶段复制二进制文件
COPY --from=go-builder --chown=autoads:autoads /app/autoads-server .

# 复制配置文件模板（如果存在）
COPY --chown=autoads:autoads config*.yaml* ./

# 复制数据库迁移文件
COPY --chown=autoads:autoads internal/init/migrations/ ./migrations/

# 设置正确的权限
RUN chmod +x ./autoads-server && \
    chmod -R 755 ./migrations/

# 切换到非特权用户
USER autoads

# 暴露端口
EXPOSE 8080

# 添加元数据标签
LABEL maintainer="AutoAds Team <team@autoads.com>" \
      version="1.0.0" \
      description="AutoAds SaaS - Automated Advertising Management Platform" \
      org.opencontainers.image.title="AutoAds SaaS" \
      org.opencontainers.image.description="Automated Advertising Management Platform" \
      org.opencontainers.image.version="1.0.0" \
      org.opencontainers.image.vendor="AutoAds" \
      org.opencontainers.image.licenses="MIT" \
      org.opencontainers.image.source="https://github.com/autoads/autoads-saas" \
      org.opencontainers.image.documentation="https://docs.autoads.com"

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# 使用dumb-init作为PID 1
ENTRYPOINT ["dumb-init", "--"]

# 启动应用
CMD ["./autoads-server"]