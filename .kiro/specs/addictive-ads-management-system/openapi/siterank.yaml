openapi: 3.0.3
info:
  title: Siterank Service
  version: 0.1.0
  license:
    name: Elastic-Internal
servers:
  - url: /api/v1
paths:
  /siterank/analyze:
    post:
      operationId: requestSiterankAnalysis
      summary: Request siterank analysis for an offer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                offerId: { type: string }
              required: [offerId]
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysis'
        '400': { description: Bad Request }
        '401': { description: Unauthorized }
        '409': { description: Conflict }
  /siterank/{offerId}:
    get:
      operationId: getLatestSiterankByOffer
      summary: Get latest siterank analysis by offerId
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: offerId
          required: true
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysis'
        '401': { description: Unauthorized }
        '404': { description: Not Found }

  /siterank/{offerId}/history:
    get:
      operationId: getSiterankHistory
      summary: Get siterank analysis history by offerId
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: offerId
          required: true
          schema: { type: string }
        - in: query
          name: days
          required: false
          schema: { type: integer, minimum: 1, default: 30 }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HistoryItem'
        '401': { description: Unauthorized }

  /siterank/{offerId}/trend:
    get:
      operationId: getSiterankTrend
      summary: Get daily trend (avg score) by offerId
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: offerId
          required: true
          schema: { type: string }
        - in: query
          name: days
          required: false
          schema: { type: integer, minimum: 1, default: 30 }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  points:
                    type: array
                    items:
                      $ref: '#/components/schemas/TrendPoint'
        '401': { description: Unauthorized }

  /siterank/similar:
    post:
      operationId: computeSimilarOffers
      summary: Compute similarity scores for candidate domains
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                seedDomain: { type: string }
                country: { type: string, description: Optional ISO country code }
                candidates:
                  type: array
                  items: { type: string }
              required: [seedDomain, candidates]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/SimilarityItem'
        '401': { description: Unauthorized }

  /siterank/keywords/suggest:
    post:
      operationId: suggestKeywords
      summary: Suggest expanded keywords based on domain and page signals
      description: |
        Generate keyword suggestions without Google Ads dependency. Uses domain tokenization +
        page title/siteName signals (via browser-exec) and SimilarWeb basics to score.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                seedDomain: { type: string, description: Domain to analyze, e.g. example.com }
                country: { type: string, description: Optional ISO country code }
                topN: { type: integer, minimum: 1, maximum: 100, default: 20 }
                minScore: { type: number, format: float, description: 0..1 score threshold, default: 0.4 }
              required: [seedDomain]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/KeywordSuggestion'
        '401': { description: Unauthorized }

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Analysis:
      type: object
      properties:
        id: { type: string }
        userId: { type: string }
        offerId: { type: string }
        status: { type: string, enum: [pending, running, completed, failed] }
        result:
          type: object
          nullable: true
          additionalProperties: true
        createdAt: { type: string, format: date-time }
        updatedAt: { type: string, format: date-time }
      required: [id, userId, offerId, status, createdAt, updatedAt]
    HistoryItem:
      type: object
      properties:
        analysisId: { type: string }
        offerId: { type: string }
        userId: { type: string }
        score: { type: integer, minimum: 0, maximum: 100 }
        createdAt: { type: string, format: date-time }
        result:
          type: object
          nullable: true
          additionalProperties: true
      required: [analysisId, offerId, userId, score, createdAt]
    TrendPoint:
      type: object
      properties:
        date: { type: string, description: YYYY-MM-DD }
        avgScore: { type: number }
        count: { type: integer }
      required: [date, avgScore, count]
    SimilarityItem:
      type: object
      properties:
        domain: { type: string }
        score: { type: number }
        factors:
          type: object
          additionalProperties: true
      required: [domain, score]
    KeywordSuggestion:
      type: object
      properties:
        keyword: { type: string }
        score: { type: number, description: 0..1, minimum: 0, maximum: 1 }
        reason: { type: string, description: brief why this keyword was suggested }
      required: [keyword, score]
