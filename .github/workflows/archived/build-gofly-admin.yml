name: "[ARCHIVED] Build & Publish GoFly Admin"

on:
  # 已由 docker.yml 统一，保留手动触发以便排障时临时使用
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags
        id: vars
        run: |
          IMAGE=ghcr.io/xxrenzhe/autoads
          echo "image=$IMAGE" >> $GITHUB_OUTPUT
          if [[ "${GITHUB_REF}" == refs/heads/main ]]; then
            echo "tags=${IMAGE}:preview-latest" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF}" == refs/heads/production ]]; then
            echo "tags=${IMAGE}:prod-latest" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG_NAME="${GITHUB_REF#refs/tags/}"
            echo "tags=${IMAGE}:prod-${TAG_NAME}" >> $GITHUB_OUTPUT
          else
            echo "tags=${IMAGE}:ci-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile.standalone
          context: .
          # 统一仅构建 linux/amd64
          platforms: linux/amd64
          push: true
          tags: ${{ steps.vars.outputs.tags }}
          build-args: |
            VERSION=${{ github.ref_name }}
            COMMIT=${{ github.sha }}
          cache-from: type=registry,ref=${{ steps.vars.outputs.image }}:buildcache
          cache-to: type=registry,ref=${{ steps.vars.outputs.image }}:buildcache,mode=max
