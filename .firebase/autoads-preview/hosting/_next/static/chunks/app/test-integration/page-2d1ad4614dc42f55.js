(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7872],{19055:(e,s,t)=>{Promise.resolve().then(t.bind(t,68604))},68604:(e,s,t)=>{"use strict";t.r(s),t.d(s,{default:()=>A});var a=t(54568),r=t(7620),n=t(47227),i=t(63353),c=t(64148),o=t(3761),l=t(18529),m=t(90721),d=t(86907),u=t(44023),g=t(39756),h=t(48474),x=t(8039),p=t(51874);function A(){let[e,s]=(0,r.useState)([]),[t,A]=(0,r.useState)(!1),[j,w]=(0,r.useState)("tests"),I=async()=>{try{for(let e of(A(!0),s([]),[{name:"Health Check API",fn:f},{name:"Monitoring APIs",fn:y},{name:"Google Ads APIs",fn:P},{name:"AdsCenter APIs",fn:N},{name:"Architecture APIs",fn:S},{name:"Deploy Status API",fn:D}])){let t=await e.fn();s(e=>[...e,t]),"error"===t.status?p.oR.error("".concat(t.name,"：").concat(t.message)):p.oR.success("".concat(t.name,"：通过"))}A(!1),p.oR.success("所有测试完成")}catch(e){console.error("Error in runAllTests:",e),A(!1),p.oR.error("测试运行失败")}},f=async()=>{let e=Date.now();try{let s=await fetch("/api/health"),t=await s.json(),a=Date.now()-e;if(s.ok&&t.status)return{name:"Health Check API",status:"success",message:"Health API responding with status: ".concat(t.status),data:{status:t.status,uptime:t.uptime},timestamp:new Date().toISOString(),duration:a};return{name:"Health Check API",status:"error",message:"Health API returned status ".concat(s.status),timestamp:new Date().toISOString(),duration:a}}catch(s){return{name:"Health Check API",status:"error",message:"Health API error: ".concat(s instanceof Error?s.message:"Unknown error"),timestamp:new Date().toISOString(),duration:Date.now()-e}}},y=async()=>{let e=Date.now();try{let[s,t]=await Promise.all([x.L.get("/monitoring/metrics"),x.L.get("/monitoring/alerts")]),a=Date.now()-e;if(s&&t)return{name:"Monitoring APIs",status:"success",message:"Both metrics and alerts APIs are working",data:{metrics:s.cpu?"Available":"Limited",alerts:Array.isArray(t.alerts)?t.alerts.length:0},timestamp:new Date().toISOString(),duration:a};return{name:"Monitoring APIs",status:"error",message:"One or more monitoring APIs failed",timestamp:new Date().toISOString(),duration:a}}catch(s){return{name:"Monitoring APIs",status:"error",message:"Monitoring APIs error: ".concat(s instanceof Error?s.message:"Unknown error"),timestamp:new Date().toISOString(),duration:Date.now()-e}}},P=async()=>{let e=Date.now();try{let[s,t]=await Promise.all([x.L.get("/google-ads/accounts"),x.L.get("/google-ads/campaigns")]),a=Date.now()-e;if(s&&t)return{name:"Google Ads APIs",status:"success",message:"Google Ads APIs are responding correctly",data:{accounts:Array.isArray(s.accounts)?s.accounts.length:0,campaigns:Array.isArray(t.campaigns)?t.campaigns.length:0},timestamp:new Date().toISOString(),duration:a};return{name:"Google Ads APIs",status:"error",message:"Google Ads APIs failed",timestamp:new Date().toISOString(),duration:a}}catch(s){return{name:"Google Ads APIs",status:"error",message:"Google Ads APIs error: ".concat(s instanceof Error?s.message:"Unknown error"),timestamp:new Date().toISOString(),duration:Date.now()-e}}},N=async()=>{let e=Date.now();try{let[s,t]=await Promise.all([x.L.get("/adscenter/configurations"),x.L.post("/adscenter/executions",{configurationId:"test-config"})]),a=Date.now()-e;if(s&&t)return{name:"AdsCenter APIs",status:"success",message:"AdsCenter APIs are working correctly",data:{configurations:Array.isArray(s.configurations)?s.configurations.length:0,execution:t.executionId?"Started":"Failed"},timestamp:new Date().toISOString(),duration:a};return{name:"AdsCenter APIs",status:"error",message:"AdsCenter APIs failed",timestamp:new Date().toISOString(),duration:a}}catch(s){return{name:"AdsCenter APIs",status:"error",message:"AdsCenter APIs error: ".concat(s instanceof Error?s.message:"Unknown error"),timestamp:new Date().toISOString(),duration:Date.now()-e}}},S=async()=>{let e=Date.now();try{let[s,t,a]=await Promise.all([fetch("/api/architecture/status"),fetch("/api/architecture/services"),fetch("/api/architecture/plugins")]),r=await s.json(),n=await t.json(),i=await a.json(),c=Date.now()-e;if(s.ok&&t.ok&&a.ok)return{name:"Architecture APIs",status:"success",message:"All architecture APIs are working",data:{version:r.version||"Unknown",services:Array.isArray(n.services)?n.services.length:0,plugins:Array.isArray(i.plugins)?i.plugins.length:0},timestamp:new Date().toISOString(),duration:c};return{name:"Architecture APIs",status:"error",message:"Architecture APIs failed",timestamp:new Date().toISOString(),duration:c}}catch(s){return{name:"Architecture APIs",status:"error",message:"Architecture APIs error: ".concat(s instanceof Error?s.message:"Unknown error"),timestamp:new Date().toISOString(),duration:Date.now()-e}}},D=async()=>{let e=Date.now();try{let s=await fetch("/api/deploy-status"),t=await s.json(),a=Date.now()-e;if(s.ok&&t.environment)return{name:"Deploy Status API",status:"success",message:"Deploy status API working - Environment: ".concat(t.environment),data:{environment:t.environment,version:t.version,uptime:t.uptime},timestamp:new Date().toISOString(),duration:a};return{name:"Deploy Status API",status:"error",message:"Deploy status API failed",timestamp:new Date().toISOString(),duration:a}}catch(s){return{name:"Deploy Status API",status:"error",message:"Deploy status API error: ".concat(s instanceof Error?s.message:"Unknown error"),timestamp:new Date().toISOString(),duration:Date.now()-e}}},v=e=>{switch(e){case"success":return(0,a.jsx)(l.A,{className:"h-4 w-4 text-green-500"});case"error":return(0,a.jsx)(m.A,{className:"h-4 w-4 text-red-500"});case"pending":return(0,a.jsx)(d.A,{className:"h-4 w-4 text-yellow-500"});default:return(0,a.jsx)(u.A,{className:"h-4 w-4 text-gray-500"})}},E=e=>({success:"bg-green-100 text-green-800",error:"bg-red-100 text-red-800",pending:"bg-yellow-100 text-yellow-800"})[e]||"bg-gray-100 text-gray-800";return(0,a.jsxs)("div",{className:"container mx-auto p-6 space-y-6",children:[(0,a.jsxs)("div",{className:"flex items-center justify-between",children:[(0,a.jsxs)("div",{children:[(0,a.jsx)("h1",{className:"text-3xl font-bold",children:"系统集成测试"}),(0,a.jsx)("p",{className:"text-muted-foreground",children:"验证所有API端点和系统功能"})]}),(0,a.jsxs)(n.$,{onClick:I,disabled:t,className:"flex items-center gap-2",children:[t?(0,a.jsx)(g.A,{className:"h-4 w-4 animate-spin"}):(0,a.jsx)(h.A,{className:"h-4 w-4"}),t?"运行中...":"运行所有测试"]})]}),(0,a.jsxs)(o.tU,{value:j,onValueChange:e=>w(e),children:[(0,a.jsxs)(o.j7,{children:[(0,a.jsx)(o.Xi,{value:"tests",children:"测试结果"}),(0,a.jsx)(o.Xi,{value:"api",children:"API状态"})]}),(0,a.jsxs)(o.av,{value:"tests",className:"space-y-4",children:[0===e.length&&!t&&(0,a.jsx)(i.Zp,{children:(0,a.jsx)(i.Wu,{className:"pt-6",children:(0,a.jsx)("p",{className:"text-center text-muted-foreground",children:'点击"运行所有测试"开始系统验证'})})}),e.map((e,s)=>(0,a.jsxs)(i.Zp,{children:[(0,a.jsx)(i.aR,{className:"pb-3",children:(0,a.jsxs)("div",{className:"flex items-center justify-between",children:[(0,a.jsxs)(i.ZB,{className:"flex items-center gap-2",children:[v(e.status),e.name]}),(0,a.jsxs)("div",{className:"flex items-center gap-2",children:[e.duration&&(0,a.jsxs)("span",{className:"text-sm text-muted-foreground",children:[e.duration,"ms"]}),(0,a.jsx)(c.E,{className:E(e.status),children:e.status})]})]})}),(0,a.jsxs)(i.Wu,{children:[(0,a.jsx)("p",{className:"text-sm mb-2",children:e.message}),null!=e.data&&(0,a.jsx)("div",{className:"bg-muted p-3 rounded-md",children:(0,a.jsx)("pre",{className:"text-xs overflow-auto",children:JSON.stringify(e.data,null,2)})}),(0,a.jsx)("p",{className:"text-xs text-muted-foreground mt-2",children:new Date(e.timestamp).toLocaleString()})]})]},s))]}),(0,a.jsx)(o.av,{value:"api",className:"space-y-4",children:(0,a.jsxs)("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4",children:[(0,a.jsxs)(i.Zp,{children:[(0,a.jsx)(i.aR,{children:(0,a.jsx)(i.ZB,{className:"text-sm",children:"健康检查"})}),(0,a.jsxs)(i.Wu,{children:[(0,a.jsx)("p",{className:"text-xs text-muted-foreground",children:"系统健康状态监控"}),(0,a.jsx)(c.E,{className:"mt-2",children:"GET /api/health"})]})]}),(0,a.jsxs)(i.Zp,{children:[(0,a.jsx)(i.aR,{children:(0,a.jsx)(i.ZB,{className:"text-sm",children:"监控系统"})}),(0,a.jsxs)(i.Wu,{children:[(0,a.jsx)("p",{className:"text-xs text-muted-foreground",children:"系统指标和告警管理"}),(0,a.jsxs)("div",{className:"mt-2 space-y-1",children:[(0,a.jsx)(c.E,{children:"GET /api/monitoring/metrics"}),(0,a.jsx)(c.E,{children:"GET /api/monitoring/alerts"})]})]})]}),(0,a.jsxs)(i.Zp,{children:[(0,a.jsx)(i.aR,{children:(0,a.jsx)(i.ZB,{className:"text-sm",children:"Google Ads"})}),(0,a.jsxs)(i.Wu,{children:[(0,a.jsx)("p",{className:"text-xs text-muted-foreground",children:"广告账户和系列管理"}),(0,a.jsxs)("div",{className:"mt-2 space-y-1",children:[(0,a.jsx)(c.E,{children:"GET /api/google-ads/accounts"}),(0,a.jsx)(c.E,{children:"GET /api/google-ads/campaigns"})]})]})]}),(0,a.jsxs)(i.Zp,{children:[(0,a.jsx)(i.aR,{children:(0,a.jsx)(i.ZB,{className:"text-sm",children:"AdsCenter"})}),(0,a.jsxs)(i.Wu,{children:[(0,a.jsx)("p",{className:"text-xs text-muted-foreground",children:"链接变更自动化管理"}),(0,a.jsxs)("div",{className:"mt-2 space-y-1",children:[(0,a.jsx)(c.E,{children:"GET /api/adscenter/configurations"}),(0,a.jsx)(c.E,{children:"POST /api/adscenter/executions"})]})]})]}),(0,a.jsxs)(i.Zp,{children:[(0,a.jsx)(i.aR,{children:(0,a.jsx)(i.ZB,{className:"text-sm",children:"系统架构"})}),(0,a.jsxs)(i.Wu,{children:[(0,a.jsx)("p",{className:"text-xs text-muted-foreground",children:"架构信息和服务状态"}),(0,a.jsxs)("div",{className:"mt-2 space-y-1",children:[(0,a.jsx)(c.E,{children:"GET /api/architecture/status"}),(0,a.jsx)(c.E,{children:"GET /api/architecture/services"})]})]})]}),(0,a.jsxs)(i.Zp,{children:[(0,a.jsx)(i.aR,{children:(0,a.jsx)(i.ZB,{className:"text-sm",children:"部署状态"})}),(0,a.jsxs)(i.Wu,{children:[(0,a.jsx)("p",{className:"text-xs text-muted-foreground",children:"部署信息和环境状态"}),(0,a.jsx)(c.E,{className:"mt-2",children:"GET /api/deploy-status"})]})]})]})})]})]})}}},e=>{var s=s=>e(e.s=s);e.O(0,[2076,4121,7358],()=>s(19055)),_N_E=e.O()}]);